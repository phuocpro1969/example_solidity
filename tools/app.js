const Web3 = require("web3");

const pk = "90ed23ba8bb8d6545f1b00faf45d45692cd591eddbe68dd850f8479e841a8a71";

const infuraKey = "d6641d8a30554c5e8df56115bae623bf";
const rinkeby = `wss://rinkeby.infura.io/ws/v3/${infuraKey}`;

const provider = new Web3.providers.WebsocketProvider(rinkeby);
const web3 = new Web3(provider);
const sender = "0x8B578Deb4e2A5CFB0A00277E9ef8B0feF566512B";
const chainId = 4;

const decode = async (type, data) => {
	return await web3.eth.abi.decodeParameter(type, data);
};

const decodeMulti = async (ArrayTypes, data) => {
	return await web3.eth.abi.decodeParameters(ArrayTypes, data);
};

const bytesToHex = async (byte) => {
	return await web3.utils.bytesToHex(byte);
};

const run = async () => {
	const bytes_1 =
		"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000008b578deb4e2a5cfb0a00277e9ef8b0fef566512bf824cee058d3587bccc4e99af9a3f8303af87979000000000000020000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000";

	const bytes_2 =
		"000000000000000000000000f824cee058d3587bccc4e99af9a3f8303af879790000000000000000000000000000000000000000000000000000000000000000f824cee058d3587bccc4e99af9a3f8303af87979000000000000020000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000";

	const bytes_3 =
		"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

	const bytes_4 =
		"0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

	const arrTypes_safeTransferFrom = [
		"address from",
		"address to",
		"uint256 id",
		"uint256 amount",
		"bytes32 data",
		"address value",
	];

	const arrTypes = ["uint256", "uint256", "uint256", "address"];

	const callDataBuy = await decodeMulti(arrTypes_safeTransferFrom, bytes_1);
	console.log("call data buy :>> ", callDataBuy);

	const callDataSell = await decodeMulti(arrTypes_safeTransferFrom, bytes_2);
	console.log("call data buy :>> ", callDataSell);

	const test = await decodeMulti(arrTypes, bytes_3);
	console.log("test :>> ", test);

	process.exit(0);
};

run();
